
defmacro fiboL #x1
		# comprobar si se pide el primer elemento de la serie
		z <- x1 - 1
		if z != 0 goto a
		y <- 0
		goto e

		# comprobar si se pide el segundo elemento
[a]		z--
		if z != 0 goto a2
		y <- 1
		goto e

		# caso general
[a2]	z <- x1 - 1
		z2 <- fiboL(z)
		z--
		z3 <- fiboL(z)
		y <- z2 + z3
endmacro

defmacro mul
	Y <- X1 * X2
endmacro

defmacro multwo
	Y <- mul(x1, 2)
endmacro

defmacro addfive
	Y <- X1 + 5
endmacro

# pruebas de recursividad
defmacro macroA
	z1 <- macroB(x1)
	z2 <- macroC(x1)
	z3 <- macroD(x1)
	y <- z1 + z2
	y <- y + z3
endmacro

defmacro macroB
	z1 <- x1 + 1
	y <- macroD(z1)
endmacro

defmacro macroC
	y <- macroD(x1)
endmacro

defmacro macroD
	y <- x1 + 1
endmacro
